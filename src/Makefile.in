# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = molds$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure AUTHORS COPYING ChangeLog INSTALL NEWS \
	config.guess config.sub depcomp install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_cxx_namespaces.m4 \
	$(top_srcdir)/m4/ax_blas.m4 $(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_mpi.m4 \
	$(top_srcdir)/m4/ax_boost_serialization.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/ax_lapack.m4 $(top_srcdir)/m4/ax_mpi.m4 \
	$(top_srcdir)/m4/ax_openmp.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = Enums.$(OBJEXT) PrintController.$(OBJEXT) \
	MolDSException.$(OBJEXT) MallocerFreer.$(OBJEXT) \
	MpiProcess.$(OBJEXT) AsyncCommunicator.$(OBJEXT) \
	Blas.$(OBJEXT) Lapack.$(OBJEXT) Utilities.$(OBJEXT) \
	MathUtilities.$(OBJEXT) EularAngle.$(OBJEXT) \
	Parameters.$(OBJEXT) RealSphericalHarmonicsIndex.$(OBJEXT) \
	Atom.$(OBJEXT) Hatom.$(OBJEXT) Liatom.$(OBJEXT) \
	Catom.$(OBJEXT) Natom.$(OBJEXT) Oatom.$(OBJEXT) \
	Satom.$(OBJEXT) Znatom.$(OBJEXT) Ghost.$(OBJEXT) \
	GhostHatom.$(OBJEXT) GhostLiatom.$(OBJEXT) \
	GhostCatom.$(OBJEXT) GhostNatom.$(OBJEXT) GhostOatom.$(OBJEXT) \
	GhostSatom.$(OBJEXT) GhostZnatom.$(OBJEXT) \
	EnvironmentalPointCharge.$(OBJEXT) AtomFactory.$(OBJEXT) \
	Molecule.$(OBJEXT) InputParser.$(OBJEXT) \
	GTOExpansionSTO.$(OBJEXT) MOLogger.$(OBJEXT) \
	DensityLogger.$(OBJEXT) HoleDensityLogger.$(OBJEXT) \
	ParticleDensityLogger.$(OBJEXT) Cndo2.$(OBJEXT) Indo.$(OBJEXT) \
	ZindoS.$(OBJEXT) Mndo.$(OBJEXT) Am1.$(OBJEXT) Am1D.$(OBJEXT) \
	Pm3.$(OBJEXT) Pm3D.$(OBJEXT) Pm3Pddg.$(OBJEXT) \
	ElectronicStructureFactory.$(OBJEXT) MD.$(OBJEXT) MC.$(OBJEXT) \
	RPMD.$(OBJEXT) NASCO.$(OBJEXT) Optimizer.$(OBJEXT) \
	ConjugateGradient.$(OBJEXT) SteepestDescent.$(OBJEXT) \
	BFGS.$(OBJEXT) GEDIIS.$(OBJEXT) OptimizerFactory.$(OBJEXT) \
	MolDS.$(OBJEXT) Main.$(OBJEXT)
am__objects_2 =
am_molds_OBJECTS = $(am__objects_1) $(am__objects_2)
molds_OBJECTS = $(am_molds_OBJECTS)
molds_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(molds_SOURCES)
DIST_SOURCES = $(molds_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_MPI_LIB = @BOOST_MPI_LIB@
BOOST_SERIALIZATION_LIB = @BOOST_SERIALIZATION_LIB@
BOOST_THREAD_LIBS = @BOOST_THREAD_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@ $(BOOST_MPI_LIB) $(BOOST_SERIALIZATION_LIB) \
	$(BOOST_THREAD_LIBS)
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPICC = @MPICC@
MPILIBS = @MPILIBS@
OBJEXT = @OBJEXT@
OPENMP_CXXFLAGS = @OPENMP_CXXFLAGS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
ALL_CPP_FILES = base/Enums.cpp base/PrintController.cpp \
	base/MolDSException.cpp base/MallocerFreer.cpp \
	mpi/MpiProcess.cpp mpi/AsyncCommunicator.cpp wrappers/Blas.cpp \
	wrappers/Lapack.cpp base/Utilities.cpp base/MathUtilities.cpp \
	base/EularAngle.cpp base/Parameters.cpp \
	base/RealSphericalHarmonicsIndex.cpp base/atoms/Atom.cpp \
	base/atoms/Hatom.cpp base/atoms/Liatom.cpp \
	base/atoms/Catom.cpp base/atoms/Natom.cpp base/atoms/Oatom.cpp \
	base/atoms/Satom.cpp base/atoms/Znatom.cpp \
	base/atoms/ghost/Ghost.cpp base/atoms/ghost/GhostHatom.cpp \
	base/atoms/ghost/GhostLiatom.cpp \
	base/atoms/ghost/GhostCatom.cpp \
	base/atoms/ghost/GhostNatom.cpp \
	base/atoms/ghost/GhostOatom.cpp \
	base/atoms/ghost/GhostSatom.cpp \
	base/atoms/ghost/GhostZnatom.cpp \
	base/atoms/mm/EnvironmentalPointCharge.cpp \
	base/factories/AtomFactory.cpp base/Molecule.cpp \
	base/InputParser.cpp base/GTOExpansionSTO.cpp \
	base/loggers/MOLogger.cpp base/loggers/DensityLogger.cpp \
	base/loggers/HoleDensityLogger.cpp \
	base/loggers/ParticleDensityLogger.cpp cndo/Cndo2.cpp \
	indo/Indo.cpp zindo/ZindoS.cpp mndo/Mndo.cpp am1/Am1.cpp \
	am1/Am1D.cpp pm3/Pm3.cpp pm3/Pm3D.cpp pm3/Pm3Pddg.cpp \
	base/factories/ElectronicStructureFactory.cpp md/MD.cpp \
	mc/MC.cpp rpmd/RPMD.cpp nasco/NASCO.cpp \
	optimization/Optimizer.cpp optimization/ConjugateGradient.cpp \
	optimization/SteepestDescent.cpp optimization/BFGS.cpp \
	optimization/GEDIIS.cpp base/factories/OptimizerFactory.cpp \
	base/MolDS.cpp Main.cpp
ALL_HEAD_FILES = config.h base/Enums.h base/Uncopyable.h \
	base/PrintController.h base/MolDSException.h \
	base/containers/ThreadSafeQueue.h base/MallocerFreer.h \
	mpi/MpiInt.h mpi/MpiProcess.h mpi/AsyncCommunicator.h \
	wrappers/Blas.h wrappers/Lapack.h base/Utilities.h \
	base/MathUtilities.h base/EularAngle.h base/Parameters.h \
	base/RealSphericalHarmonicsIndex.h base/atoms/Atom.h \
	base/atoms/Hatom.h base/atoms/Liatom.h base/atoms/Catom.h \
	base/atoms/Natom.h base/atoms/Oatom.h base/atoms/Satom.h \
	base/atoms/Znatom.h base/atoms/ghost/Ghost.h \
	base/atoms/ghost/GhostHatom.h base/atoms/ghost/GhostLiatom.h \
	base/atoms/ghost/GhostCatom.h base/atoms/ghost/GhostNatom.h \
	base/atoms/ghost/GhostOatom.h base/atoms/ghost/GhostSatom.h \
	base/atoms/ghost/GhostZnatom.h \
	base/atoms/mm/EnvironmentalPointCharge.h \
	base/factories/AtomFactory.h base/Molecule.h \
	base/InputParser.h base/GTOExpansionSTO.h \
	base/loggers/MOLogger.h base/loggers/DensityLogger.h \
	base/loggers/HoleDensityLogger.h \
	base/loggers/ParticleDensityLogger.h \
	base/ElectronicStructure.h cndo/Cndo2.h \
	cndo/ReducedOverlapAOsParameters.h indo/Indo.h zindo/ZindoS.h \
	mndo/Mndo.h am1/Am1.h am1/Am1D.h pm3/Pm3.h pm3/Pm3D.h \
	pm3/Pm3Pddg.h base/factories/ElectronicStructureFactory.h \
	md/MD.h mc/MC.h rpmd/RPMD.h nasco/NASCO.h \
	optimization/Optimizer.h optimization/ConjugateGradient.h \
	optimization/SteepestDescent.h optimization/BFGS.h \
	optimization/GEDIIS.h base/factories/OptimizerFactory.h \
	base/MolDS.h
molds_SOURCES = $(ALL_CPP_FILES) $(ALL_HEAD_FILES)
ACLOCAL_AMFLAGS = -I m4
AM_CXXFLAGS = $(OPENMP_CXXFLAGS)
AM_CPPFLAGS = $(BOOST_CPPFLAGS)
AM_LDFLAGS = $(BOOST_LDFLAGS)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
molds$(EXEEXT): $(molds_OBJECTS) $(molds_DEPENDENCIES) $(EXTRA_molds_DEPENDENCIES) 
	@rm -f molds$(EXEEXT)
	$(CXXLINK) $(molds_OBJECTS) $(molds_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Am1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Am1D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AsyncCommunicator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Atom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AtomFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BFGS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Blas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Catom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Cndo2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConjugateGradient.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DensityLogger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ElectronicStructureFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Enums.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EnvironmentalPointCharge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EularAngle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GEDIIS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GTOExpansionSTO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Ghost.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GhostCatom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GhostHatom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GhostLiatom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GhostNatom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GhostOatom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GhostSatom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GhostZnatom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Hatom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HoleDensityLogger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Indo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InputParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Lapack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Liatom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MD.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MOLogger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MallocerFreer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MathUtilities.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Mndo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MolDS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MolDSException.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Molecule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MpiProcess.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NASCO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Natom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Oatom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Optimizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OptimizerFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Parameters.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParticleDensityLogger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Pm3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Pm3D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Pm3Pddg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PrintController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RPMD.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RealSphericalHarmonicsIndex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Satom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SteepestDescent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Utilities.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZindoS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Znatom.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

Enums.o: base/Enums.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Enums.o -MD -MP -MF $(DEPDIR)/Enums.Tpo -c -o Enums.o `test -f 'base/Enums.cpp' || echo '$(srcdir)/'`base/Enums.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Enums.Tpo $(DEPDIR)/Enums.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Enums.cpp' object='Enums.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Enums.o `test -f 'base/Enums.cpp' || echo '$(srcdir)/'`base/Enums.cpp

Enums.obj: base/Enums.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Enums.obj -MD -MP -MF $(DEPDIR)/Enums.Tpo -c -o Enums.obj `if test -f 'base/Enums.cpp'; then $(CYGPATH_W) 'base/Enums.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Enums.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Enums.Tpo $(DEPDIR)/Enums.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Enums.cpp' object='Enums.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Enums.obj `if test -f 'base/Enums.cpp'; then $(CYGPATH_W) 'base/Enums.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Enums.cpp'; fi`

PrintController.o: base/PrintController.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PrintController.o -MD -MP -MF $(DEPDIR)/PrintController.Tpo -c -o PrintController.o `test -f 'base/PrintController.cpp' || echo '$(srcdir)/'`base/PrintController.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/PrintController.Tpo $(DEPDIR)/PrintController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/PrintController.cpp' object='PrintController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrintController.o `test -f 'base/PrintController.cpp' || echo '$(srcdir)/'`base/PrintController.cpp

PrintController.obj: base/PrintController.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PrintController.obj -MD -MP -MF $(DEPDIR)/PrintController.Tpo -c -o PrintController.obj `if test -f 'base/PrintController.cpp'; then $(CYGPATH_W) 'base/PrintController.cpp'; else $(CYGPATH_W) '$(srcdir)/base/PrintController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/PrintController.Tpo $(DEPDIR)/PrintController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/PrintController.cpp' object='PrintController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrintController.obj `if test -f 'base/PrintController.cpp'; then $(CYGPATH_W) 'base/PrintController.cpp'; else $(CYGPATH_W) '$(srcdir)/base/PrintController.cpp'; fi`

MolDSException.o: base/MolDSException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MolDSException.o -MD -MP -MF $(DEPDIR)/MolDSException.Tpo -c -o MolDSException.o `test -f 'base/MolDSException.cpp' || echo '$(srcdir)/'`base/MolDSException.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MolDSException.Tpo $(DEPDIR)/MolDSException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/MolDSException.cpp' object='MolDSException.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MolDSException.o `test -f 'base/MolDSException.cpp' || echo '$(srcdir)/'`base/MolDSException.cpp

MolDSException.obj: base/MolDSException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MolDSException.obj -MD -MP -MF $(DEPDIR)/MolDSException.Tpo -c -o MolDSException.obj `if test -f 'base/MolDSException.cpp'; then $(CYGPATH_W) 'base/MolDSException.cpp'; else $(CYGPATH_W) '$(srcdir)/base/MolDSException.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MolDSException.Tpo $(DEPDIR)/MolDSException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/MolDSException.cpp' object='MolDSException.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MolDSException.obj `if test -f 'base/MolDSException.cpp'; then $(CYGPATH_W) 'base/MolDSException.cpp'; else $(CYGPATH_W) '$(srcdir)/base/MolDSException.cpp'; fi`

MallocerFreer.o: base/MallocerFreer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MallocerFreer.o -MD -MP -MF $(DEPDIR)/MallocerFreer.Tpo -c -o MallocerFreer.o `test -f 'base/MallocerFreer.cpp' || echo '$(srcdir)/'`base/MallocerFreer.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MallocerFreer.Tpo $(DEPDIR)/MallocerFreer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/MallocerFreer.cpp' object='MallocerFreer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MallocerFreer.o `test -f 'base/MallocerFreer.cpp' || echo '$(srcdir)/'`base/MallocerFreer.cpp

MallocerFreer.obj: base/MallocerFreer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MallocerFreer.obj -MD -MP -MF $(DEPDIR)/MallocerFreer.Tpo -c -o MallocerFreer.obj `if test -f 'base/MallocerFreer.cpp'; then $(CYGPATH_W) 'base/MallocerFreer.cpp'; else $(CYGPATH_W) '$(srcdir)/base/MallocerFreer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MallocerFreer.Tpo $(DEPDIR)/MallocerFreer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/MallocerFreer.cpp' object='MallocerFreer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MallocerFreer.obj `if test -f 'base/MallocerFreer.cpp'; then $(CYGPATH_W) 'base/MallocerFreer.cpp'; else $(CYGPATH_W) '$(srcdir)/base/MallocerFreer.cpp'; fi`

MpiProcess.o: mpi/MpiProcess.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MpiProcess.o -MD -MP -MF $(DEPDIR)/MpiProcess.Tpo -c -o MpiProcess.o `test -f 'mpi/MpiProcess.cpp' || echo '$(srcdir)/'`mpi/MpiProcess.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MpiProcess.Tpo $(DEPDIR)/MpiProcess.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mpi/MpiProcess.cpp' object='MpiProcess.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MpiProcess.o `test -f 'mpi/MpiProcess.cpp' || echo '$(srcdir)/'`mpi/MpiProcess.cpp

MpiProcess.obj: mpi/MpiProcess.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MpiProcess.obj -MD -MP -MF $(DEPDIR)/MpiProcess.Tpo -c -o MpiProcess.obj `if test -f 'mpi/MpiProcess.cpp'; then $(CYGPATH_W) 'mpi/MpiProcess.cpp'; else $(CYGPATH_W) '$(srcdir)/mpi/MpiProcess.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MpiProcess.Tpo $(DEPDIR)/MpiProcess.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mpi/MpiProcess.cpp' object='MpiProcess.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MpiProcess.obj `if test -f 'mpi/MpiProcess.cpp'; then $(CYGPATH_W) 'mpi/MpiProcess.cpp'; else $(CYGPATH_W) '$(srcdir)/mpi/MpiProcess.cpp'; fi`

AsyncCommunicator.o: mpi/AsyncCommunicator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AsyncCommunicator.o -MD -MP -MF $(DEPDIR)/AsyncCommunicator.Tpo -c -o AsyncCommunicator.o `test -f 'mpi/AsyncCommunicator.cpp' || echo '$(srcdir)/'`mpi/AsyncCommunicator.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/AsyncCommunicator.Tpo $(DEPDIR)/AsyncCommunicator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mpi/AsyncCommunicator.cpp' object='AsyncCommunicator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AsyncCommunicator.o `test -f 'mpi/AsyncCommunicator.cpp' || echo '$(srcdir)/'`mpi/AsyncCommunicator.cpp

AsyncCommunicator.obj: mpi/AsyncCommunicator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AsyncCommunicator.obj -MD -MP -MF $(DEPDIR)/AsyncCommunicator.Tpo -c -o AsyncCommunicator.obj `if test -f 'mpi/AsyncCommunicator.cpp'; then $(CYGPATH_W) 'mpi/AsyncCommunicator.cpp'; else $(CYGPATH_W) '$(srcdir)/mpi/AsyncCommunicator.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/AsyncCommunicator.Tpo $(DEPDIR)/AsyncCommunicator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mpi/AsyncCommunicator.cpp' object='AsyncCommunicator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AsyncCommunicator.obj `if test -f 'mpi/AsyncCommunicator.cpp'; then $(CYGPATH_W) 'mpi/AsyncCommunicator.cpp'; else $(CYGPATH_W) '$(srcdir)/mpi/AsyncCommunicator.cpp'; fi`

Blas.o: wrappers/Blas.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Blas.o -MD -MP -MF $(DEPDIR)/Blas.Tpo -c -o Blas.o `test -f 'wrappers/Blas.cpp' || echo '$(srcdir)/'`wrappers/Blas.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Blas.Tpo $(DEPDIR)/Blas.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wrappers/Blas.cpp' object='Blas.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Blas.o `test -f 'wrappers/Blas.cpp' || echo '$(srcdir)/'`wrappers/Blas.cpp

Blas.obj: wrappers/Blas.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Blas.obj -MD -MP -MF $(DEPDIR)/Blas.Tpo -c -o Blas.obj `if test -f 'wrappers/Blas.cpp'; then $(CYGPATH_W) 'wrappers/Blas.cpp'; else $(CYGPATH_W) '$(srcdir)/wrappers/Blas.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Blas.Tpo $(DEPDIR)/Blas.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wrappers/Blas.cpp' object='Blas.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Blas.obj `if test -f 'wrappers/Blas.cpp'; then $(CYGPATH_W) 'wrappers/Blas.cpp'; else $(CYGPATH_W) '$(srcdir)/wrappers/Blas.cpp'; fi`

Lapack.o: wrappers/Lapack.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Lapack.o -MD -MP -MF $(DEPDIR)/Lapack.Tpo -c -o Lapack.o `test -f 'wrappers/Lapack.cpp' || echo '$(srcdir)/'`wrappers/Lapack.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Lapack.Tpo $(DEPDIR)/Lapack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wrappers/Lapack.cpp' object='Lapack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Lapack.o `test -f 'wrappers/Lapack.cpp' || echo '$(srcdir)/'`wrappers/Lapack.cpp

Lapack.obj: wrappers/Lapack.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Lapack.obj -MD -MP -MF $(DEPDIR)/Lapack.Tpo -c -o Lapack.obj `if test -f 'wrappers/Lapack.cpp'; then $(CYGPATH_W) 'wrappers/Lapack.cpp'; else $(CYGPATH_W) '$(srcdir)/wrappers/Lapack.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Lapack.Tpo $(DEPDIR)/Lapack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wrappers/Lapack.cpp' object='Lapack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Lapack.obj `if test -f 'wrappers/Lapack.cpp'; then $(CYGPATH_W) 'wrappers/Lapack.cpp'; else $(CYGPATH_W) '$(srcdir)/wrappers/Lapack.cpp'; fi`

Utilities.o: base/Utilities.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Utilities.o -MD -MP -MF $(DEPDIR)/Utilities.Tpo -c -o Utilities.o `test -f 'base/Utilities.cpp' || echo '$(srcdir)/'`base/Utilities.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Utilities.Tpo $(DEPDIR)/Utilities.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Utilities.cpp' object='Utilities.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Utilities.o `test -f 'base/Utilities.cpp' || echo '$(srcdir)/'`base/Utilities.cpp

Utilities.obj: base/Utilities.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Utilities.obj -MD -MP -MF $(DEPDIR)/Utilities.Tpo -c -o Utilities.obj `if test -f 'base/Utilities.cpp'; then $(CYGPATH_W) 'base/Utilities.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Utilities.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Utilities.Tpo $(DEPDIR)/Utilities.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Utilities.cpp' object='Utilities.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Utilities.obj `if test -f 'base/Utilities.cpp'; then $(CYGPATH_W) 'base/Utilities.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Utilities.cpp'; fi`

MathUtilities.o: base/MathUtilities.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MathUtilities.o -MD -MP -MF $(DEPDIR)/MathUtilities.Tpo -c -o MathUtilities.o `test -f 'base/MathUtilities.cpp' || echo '$(srcdir)/'`base/MathUtilities.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MathUtilities.Tpo $(DEPDIR)/MathUtilities.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/MathUtilities.cpp' object='MathUtilities.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MathUtilities.o `test -f 'base/MathUtilities.cpp' || echo '$(srcdir)/'`base/MathUtilities.cpp

MathUtilities.obj: base/MathUtilities.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MathUtilities.obj -MD -MP -MF $(DEPDIR)/MathUtilities.Tpo -c -o MathUtilities.obj `if test -f 'base/MathUtilities.cpp'; then $(CYGPATH_W) 'base/MathUtilities.cpp'; else $(CYGPATH_W) '$(srcdir)/base/MathUtilities.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MathUtilities.Tpo $(DEPDIR)/MathUtilities.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/MathUtilities.cpp' object='MathUtilities.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MathUtilities.obj `if test -f 'base/MathUtilities.cpp'; then $(CYGPATH_W) 'base/MathUtilities.cpp'; else $(CYGPATH_W) '$(srcdir)/base/MathUtilities.cpp'; fi`

EularAngle.o: base/EularAngle.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EularAngle.o -MD -MP -MF $(DEPDIR)/EularAngle.Tpo -c -o EularAngle.o `test -f 'base/EularAngle.cpp' || echo '$(srcdir)/'`base/EularAngle.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/EularAngle.Tpo $(DEPDIR)/EularAngle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/EularAngle.cpp' object='EularAngle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EularAngle.o `test -f 'base/EularAngle.cpp' || echo '$(srcdir)/'`base/EularAngle.cpp

EularAngle.obj: base/EularAngle.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EularAngle.obj -MD -MP -MF $(DEPDIR)/EularAngle.Tpo -c -o EularAngle.obj `if test -f 'base/EularAngle.cpp'; then $(CYGPATH_W) 'base/EularAngle.cpp'; else $(CYGPATH_W) '$(srcdir)/base/EularAngle.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/EularAngle.Tpo $(DEPDIR)/EularAngle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/EularAngle.cpp' object='EularAngle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EularAngle.obj `if test -f 'base/EularAngle.cpp'; then $(CYGPATH_W) 'base/EularAngle.cpp'; else $(CYGPATH_W) '$(srcdir)/base/EularAngle.cpp'; fi`

Parameters.o: base/Parameters.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Parameters.o -MD -MP -MF $(DEPDIR)/Parameters.Tpo -c -o Parameters.o `test -f 'base/Parameters.cpp' || echo '$(srcdir)/'`base/Parameters.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Parameters.Tpo $(DEPDIR)/Parameters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Parameters.cpp' object='Parameters.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Parameters.o `test -f 'base/Parameters.cpp' || echo '$(srcdir)/'`base/Parameters.cpp

Parameters.obj: base/Parameters.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Parameters.obj -MD -MP -MF $(DEPDIR)/Parameters.Tpo -c -o Parameters.obj `if test -f 'base/Parameters.cpp'; then $(CYGPATH_W) 'base/Parameters.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Parameters.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Parameters.Tpo $(DEPDIR)/Parameters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Parameters.cpp' object='Parameters.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Parameters.obj `if test -f 'base/Parameters.cpp'; then $(CYGPATH_W) 'base/Parameters.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Parameters.cpp'; fi`

RealSphericalHarmonicsIndex.o: base/RealSphericalHarmonicsIndex.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RealSphericalHarmonicsIndex.o -MD -MP -MF $(DEPDIR)/RealSphericalHarmonicsIndex.Tpo -c -o RealSphericalHarmonicsIndex.o `test -f 'base/RealSphericalHarmonicsIndex.cpp' || echo '$(srcdir)/'`base/RealSphericalHarmonicsIndex.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RealSphericalHarmonicsIndex.Tpo $(DEPDIR)/RealSphericalHarmonicsIndex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/RealSphericalHarmonicsIndex.cpp' object='RealSphericalHarmonicsIndex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RealSphericalHarmonicsIndex.o `test -f 'base/RealSphericalHarmonicsIndex.cpp' || echo '$(srcdir)/'`base/RealSphericalHarmonicsIndex.cpp

RealSphericalHarmonicsIndex.obj: base/RealSphericalHarmonicsIndex.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RealSphericalHarmonicsIndex.obj -MD -MP -MF $(DEPDIR)/RealSphericalHarmonicsIndex.Tpo -c -o RealSphericalHarmonicsIndex.obj `if test -f 'base/RealSphericalHarmonicsIndex.cpp'; then $(CYGPATH_W) 'base/RealSphericalHarmonicsIndex.cpp'; else $(CYGPATH_W) '$(srcdir)/base/RealSphericalHarmonicsIndex.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RealSphericalHarmonicsIndex.Tpo $(DEPDIR)/RealSphericalHarmonicsIndex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/RealSphericalHarmonicsIndex.cpp' object='RealSphericalHarmonicsIndex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RealSphericalHarmonicsIndex.obj `if test -f 'base/RealSphericalHarmonicsIndex.cpp'; then $(CYGPATH_W) 'base/RealSphericalHarmonicsIndex.cpp'; else $(CYGPATH_W) '$(srcdir)/base/RealSphericalHarmonicsIndex.cpp'; fi`

Atom.o: base/atoms/Atom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Atom.o -MD -MP -MF $(DEPDIR)/Atom.Tpo -c -o Atom.o `test -f 'base/atoms/Atom.cpp' || echo '$(srcdir)/'`base/atoms/Atom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Atom.Tpo $(DEPDIR)/Atom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Atom.cpp' object='Atom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Atom.o `test -f 'base/atoms/Atom.cpp' || echo '$(srcdir)/'`base/atoms/Atom.cpp

Atom.obj: base/atoms/Atom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Atom.obj -MD -MP -MF $(DEPDIR)/Atom.Tpo -c -o Atom.obj `if test -f 'base/atoms/Atom.cpp'; then $(CYGPATH_W) 'base/atoms/Atom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Atom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Atom.Tpo $(DEPDIR)/Atom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Atom.cpp' object='Atom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Atom.obj `if test -f 'base/atoms/Atom.cpp'; then $(CYGPATH_W) 'base/atoms/Atom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Atom.cpp'; fi`

Hatom.o: base/atoms/Hatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Hatom.o -MD -MP -MF $(DEPDIR)/Hatom.Tpo -c -o Hatom.o `test -f 'base/atoms/Hatom.cpp' || echo '$(srcdir)/'`base/atoms/Hatom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Hatom.Tpo $(DEPDIR)/Hatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Hatom.cpp' object='Hatom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Hatom.o `test -f 'base/atoms/Hatom.cpp' || echo '$(srcdir)/'`base/atoms/Hatom.cpp

Hatom.obj: base/atoms/Hatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Hatom.obj -MD -MP -MF $(DEPDIR)/Hatom.Tpo -c -o Hatom.obj `if test -f 'base/atoms/Hatom.cpp'; then $(CYGPATH_W) 'base/atoms/Hatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Hatom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Hatom.Tpo $(DEPDIR)/Hatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Hatom.cpp' object='Hatom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Hatom.obj `if test -f 'base/atoms/Hatom.cpp'; then $(CYGPATH_W) 'base/atoms/Hatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Hatom.cpp'; fi`

Liatom.o: base/atoms/Liatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Liatom.o -MD -MP -MF $(DEPDIR)/Liatom.Tpo -c -o Liatom.o `test -f 'base/atoms/Liatom.cpp' || echo '$(srcdir)/'`base/atoms/Liatom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Liatom.Tpo $(DEPDIR)/Liatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Liatom.cpp' object='Liatom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Liatom.o `test -f 'base/atoms/Liatom.cpp' || echo '$(srcdir)/'`base/atoms/Liatom.cpp

Liatom.obj: base/atoms/Liatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Liatom.obj -MD -MP -MF $(DEPDIR)/Liatom.Tpo -c -o Liatom.obj `if test -f 'base/atoms/Liatom.cpp'; then $(CYGPATH_W) 'base/atoms/Liatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Liatom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Liatom.Tpo $(DEPDIR)/Liatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Liatom.cpp' object='Liatom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Liatom.obj `if test -f 'base/atoms/Liatom.cpp'; then $(CYGPATH_W) 'base/atoms/Liatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Liatom.cpp'; fi`

Catom.o: base/atoms/Catom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Catom.o -MD -MP -MF $(DEPDIR)/Catom.Tpo -c -o Catom.o `test -f 'base/atoms/Catom.cpp' || echo '$(srcdir)/'`base/atoms/Catom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Catom.Tpo $(DEPDIR)/Catom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Catom.cpp' object='Catom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Catom.o `test -f 'base/atoms/Catom.cpp' || echo '$(srcdir)/'`base/atoms/Catom.cpp

Catom.obj: base/atoms/Catom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Catom.obj -MD -MP -MF $(DEPDIR)/Catom.Tpo -c -o Catom.obj `if test -f 'base/atoms/Catom.cpp'; then $(CYGPATH_W) 'base/atoms/Catom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Catom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Catom.Tpo $(DEPDIR)/Catom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Catom.cpp' object='Catom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Catom.obj `if test -f 'base/atoms/Catom.cpp'; then $(CYGPATH_W) 'base/atoms/Catom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Catom.cpp'; fi`

Natom.o: base/atoms/Natom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Natom.o -MD -MP -MF $(DEPDIR)/Natom.Tpo -c -o Natom.o `test -f 'base/atoms/Natom.cpp' || echo '$(srcdir)/'`base/atoms/Natom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Natom.Tpo $(DEPDIR)/Natom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Natom.cpp' object='Natom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Natom.o `test -f 'base/atoms/Natom.cpp' || echo '$(srcdir)/'`base/atoms/Natom.cpp

Natom.obj: base/atoms/Natom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Natom.obj -MD -MP -MF $(DEPDIR)/Natom.Tpo -c -o Natom.obj `if test -f 'base/atoms/Natom.cpp'; then $(CYGPATH_W) 'base/atoms/Natom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Natom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Natom.Tpo $(DEPDIR)/Natom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Natom.cpp' object='Natom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Natom.obj `if test -f 'base/atoms/Natom.cpp'; then $(CYGPATH_W) 'base/atoms/Natom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Natom.cpp'; fi`

Oatom.o: base/atoms/Oatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Oatom.o -MD -MP -MF $(DEPDIR)/Oatom.Tpo -c -o Oatom.o `test -f 'base/atoms/Oatom.cpp' || echo '$(srcdir)/'`base/atoms/Oatom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Oatom.Tpo $(DEPDIR)/Oatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Oatom.cpp' object='Oatom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Oatom.o `test -f 'base/atoms/Oatom.cpp' || echo '$(srcdir)/'`base/atoms/Oatom.cpp

Oatom.obj: base/atoms/Oatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Oatom.obj -MD -MP -MF $(DEPDIR)/Oatom.Tpo -c -o Oatom.obj `if test -f 'base/atoms/Oatom.cpp'; then $(CYGPATH_W) 'base/atoms/Oatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Oatom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Oatom.Tpo $(DEPDIR)/Oatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Oatom.cpp' object='Oatom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Oatom.obj `if test -f 'base/atoms/Oatom.cpp'; then $(CYGPATH_W) 'base/atoms/Oatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Oatom.cpp'; fi`

Satom.o: base/atoms/Satom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Satom.o -MD -MP -MF $(DEPDIR)/Satom.Tpo -c -o Satom.o `test -f 'base/atoms/Satom.cpp' || echo '$(srcdir)/'`base/atoms/Satom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Satom.Tpo $(DEPDIR)/Satom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Satom.cpp' object='Satom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Satom.o `test -f 'base/atoms/Satom.cpp' || echo '$(srcdir)/'`base/atoms/Satom.cpp

Satom.obj: base/atoms/Satom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Satom.obj -MD -MP -MF $(DEPDIR)/Satom.Tpo -c -o Satom.obj `if test -f 'base/atoms/Satom.cpp'; then $(CYGPATH_W) 'base/atoms/Satom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Satom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Satom.Tpo $(DEPDIR)/Satom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Satom.cpp' object='Satom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Satom.obj `if test -f 'base/atoms/Satom.cpp'; then $(CYGPATH_W) 'base/atoms/Satom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Satom.cpp'; fi`

Znatom.o: base/atoms/Znatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Znatom.o -MD -MP -MF $(DEPDIR)/Znatom.Tpo -c -o Znatom.o `test -f 'base/atoms/Znatom.cpp' || echo '$(srcdir)/'`base/atoms/Znatom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Znatom.Tpo $(DEPDIR)/Znatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Znatom.cpp' object='Znatom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Znatom.o `test -f 'base/atoms/Znatom.cpp' || echo '$(srcdir)/'`base/atoms/Znatom.cpp

Znatom.obj: base/atoms/Znatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Znatom.obj -MD -MP -MF $(DEPDIR)/Znatom.Tpo -c -o Znatom.obj `if test -f 'base/atoms/Znatom.cpp'; then $(CYGPATH_W) 'base/atoms/Znatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Znatom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Znatom.Tpo $(DEPDIR)/Znatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/Znatom.cpp' object='Znatom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Znatom.obj `if test -f 'base/atoms/Znatom.cpp'; then $(CYGPATH_W) 'base/atoms/Znatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/Znatom.cpp'; fi`

Ghost.o: base/atoms/ghost/Ghost.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Ghost.o -MD -MP -MF $(DEPDIR)/Ghost.Tpo -c -o Ghost.o `test -f 'base/atoms/ghost/Ghost.cpp' || echo '$(srcdir)/'`base/atoms/ghost/Ghost.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Ghost.Tpo $(DEPDIR)/Ghost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/Ghost.cpp' object='Ghost.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Ghost.o `test -f 'base/atoms/ghost/Ghost.cpp' || echo '$(srcdir)/'`base/atoms/ghost/Ghost.cpp

Ghost.obj: base/atoms/ghost/Ghost.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Ghost.obj -MD -MP -MF $(DEPDIR)/Ghost.Tpo -c -o Ghost.obj `if test -f 'base/atoms/ghost/Ghost.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/Ghost.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/Ghost.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Ghost.Tpo $(DEPDIR)/Ghost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/Ghost.cpp' object='Ghost.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Ghost.obj `if test -f 'base/atoms/ghost/Ghost.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/Ghost.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/Ghost.cpp'; fi`

GhostHatom.o: base/atoms/ghost/GhostHatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostHatom.o -MD -MP -MF $(DEPDIR)/GhostHatom.Tpo -c -o GhostHatom.o `test -f 'base/atoms/ghost/GhostHatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostHatom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostHatom.Tpo $(DEPDIR)/GhostHatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostHatom.cpp' object='GhostHatom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostHatom.o `test -f 'base/atoms/ghost/GhostHatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostHatom.cpp

GhostHatom.obj: base/atoms/ghost/GhostHatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostHatom.obj -MD -MP -MF $(DEPDIR)/GhostHatom.Tpo -c -o GhostHatom.obj `if test -f 'base/atoms/ghost/GhostHatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostHatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostHatom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostHatom.Tpo $(DEPDIR)/GhostHatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostHatom.cpp' object='GhostHatom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostHatom.obj `if test -f 'base/atoms/ghost/GhostHatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostHatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostHatom.cpp'; fi`

GhostLiatom.o: base/atoms/ghost/GhostLiatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostLiatom.o -MD -MP -MF $(DEPDIR)/GhostLiatom.Tpo -c -o GhostLiatom.o `test -f 'base/atoms/ghost/GhostLiatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostLiatom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostLiatom.Tpo $(DEPDIR)/GhostLiatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostLiatom.cpp' object='GhostLiatom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostLiatom.o `test -f 'base/atoms/ghost/GhostLiatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostLiatom.cpp

GhostLiatom.obj: base/atoms/ghost/GhostLiatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostLiatom.obj -MD -MP -MF $(DEPDIR)/GhostLiatom.Tpo -c -o GhostLiatom.obj `if test -f 'base/atoms/ghost/GhostLiatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostLiatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostLiatom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostLiatom.Tpo $(DEPDIR)/GhostLiatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostLiatom.cpp' object='GhostLiatom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostLiatom.obj `if test -f 'base/atoms/ghost/GhostLiatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostLiatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostLiatom.cpp'; fi`

GhostCatom.o: base/atoms/ghost/GhostCatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostCatom.o -MD -MP -MF $(DEPDIR)/GhostCatom.Tpo -c -o GhostCatom.o `test -f 'base/atoms/ghost/GhostCatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostCatom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostCatom.Tpo $(DEPDIR)/GhostCatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostCatom.cpp' object='GhostCatom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostCatom.o `test -f 'base/atoms/ghost/GhostCatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostCatom.cpp

GhostCatom.obj: base/atoms/ghost/GhostCatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostCatom.obj -MD -MP -MF $(DEPDIR)/GhostCatom.Tpo -c -o GhostCatom.obj `if test -f 'base/atoms/ghost/GhostCatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostCatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostCatom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostCatom.Tpo $(DEPDIR)/GhostCatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostCatom.cpp' object='GhostCatom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostCatom.obj `if test -f 'base/atoms/ghost/GhostCatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostCatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostCatom.cpp'; fi`

GhostNatom.o: base/atoms/ghost/GhostNatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostNatom.o -MD -MP -MF $(DEPDIR)/GhostNatom.Tpo -c -o GhostNatom.o `test -f 'base/atoms/ghost/GhostNatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostNatom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostNatom.Tpo $(DEPDIR)/GhostNatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostNatom.cpp' object='GhostNatom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostNatom.o `test -f 'base/atoms/ghost/GhostNatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostNatom.cpp

GhostNatom.obj: base/atoms/ghost/GhostNatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostNatom.obj -MD -MP -MF $(DEPDIR)/GhostNatom.Tpo -c -o GhostNatom.obj `if test -f 'base/atoms/ghost/GhostNatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostNatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostNatom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostNatom.Tpo $(DEPDIR)/GhostNatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostNatom.cpp' object='GhostNatom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostNatom.obj `if test -f 'base/atoms/ghost/GhostNatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostNatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostNatom.cpp'; fi`

GhostOatom.o: base/atoms/ghost/GhostOatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostOatom.o -MD -MP -MF $(DEPDIR)/GhostOatom.Tpo -c -o GhostOatom.o `test -f 'base/atoms/ghost/GhostOatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostOatom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostOatom.Tpo $(DEPDIR)/GhostOatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostOatom.cpp' object='GhostOatom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostOatom.o `test -f 'base/atoms/ghost/GhostOatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostOatom.cpp

GhostOatom.obj: base/atoms/ghost/GhostOatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostOatom.obj -MD -MP -MF $(DEPDIR)/GhostOatom.Tpo -c -o GhostOatom.obj `if test -f 'base/atoms/ghost/GhostOatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostOatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostOatom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostOatom.Tpo $(DEPDIR)/GhostOatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostOatom.cpp' object='GhostOatom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostOatom.obj `if test -f 'base/atoms/ghost/GhostOatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostOatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostOatom.cpp'; fi`

GhostSatom.o: base/atoms/ghost/GhostSatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostSatom.o -MD -MP -MF $(DEPDIR)/GhostSatom.Tpo -c -o GhostSatom.o `test -f 'base/atoms/ghost/GhostSatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostSatom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostSatom.Tpo $(DEPDIR)/GhostSatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostSatom.cpp' object='GhostSatom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostSatom.o `test -f 'base/atoms/ghost/GhostSatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostSatom.cpp

GhostSatom.obj: base/atoms/ghost/GhostSatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostSatom.obj -MD -MP -MF $(DEPDIR)/GhostSatom.Tpo -c -o GhostSatom.obj `if test -f 'base/atoms/ghost/GhostSatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostSatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostSatom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostSatom.Tpo $(DEPDIR)/GhostSatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostSatom.cpp' object='GhostSatom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostSatom.obj `if test -f 'base/atoms/ghost/GhostSatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostSatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostSatom.cpp'; fi`

GhostZnatom.o: base/atoms/ghost/GhostZnatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostZnatom.o -MD -MP -MF $(DEPDIR)/GhostZnatom.Tpo -c -o GhostZnatom.o `test -f 'base/atoms/ghost/GhostZnatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostZnatom.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostZnatom.Tpo $(DEPDIR)/GhostZnatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostZnatom.cpp' object='GhostZnatom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostZnatom.o `test -f 'base/atoms/ghost/GhostZnatom.cpp' || echo '$(srcdir)/'`base/atoms/ghost/GhostZnatom.cpp

GhostZnatom.obj: base/atoms/ghost/GhostZnatom.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GhostZnatom.obj -MD -MP -MF $(DEPDIR)/GhostZnatom.Tpo -c -o GhostZnatom.obj `if test -f 'base/atoms/ghost/GhostZnatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostZnatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostZnatom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GhostZnatom.Tpo $(DEPDIR)/GhostZnatom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/ghost/GhostZnatom.cpp' object='GhostZnatom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GhostZnatom.obj `if test -f 'base/atoms/ghost/GhostZnatom.cpp'; then $(CYGPATH_W) 'base/atoms/ghost/GhostZnatom.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/ghost/GhostZnatom.cpp'; fi`

EnvironmentalPointCharge.o: base/atoms/mm/EnvironmentalPointCharge.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EnvironmentalPointCharge.o -MD -MP -MF $(DEPDIR)/EnvironmentalPointCharge.Tpo -c -o EnvironmentalPointCharge.o `test -f 'base/atoms/mm/EnvironmentalPointCharge.cpp' || echo '$(srcdir)/'`base/atoms/mm/EnvironmentalPointCharge.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/EnvironmentalPointCharge.Tpo $(DEPDIR)/EnvironmentalPointCharge.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/mm/EnvironmentalPointCharge.cpp' object='EnvironmentalPointCharge.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EnvironmentalPointCharge.o `test -f 'base/atoms/mm/EnvironmentalPointCharge.cpp' || echo '$(srcdir)/'`base/atoms/mm/EnvironmentalPointCharge.cpp

EnvironmentalPointCharge.obj: base/atoms/mm/EnvironmentalPointCharge.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EnvironmentalPointCharge.obj -MD -MP -MF $(DEPDIR)/EnvironmentalPointCharge.Tpo -c -o EnvironmentalPointCharge.obj `if test -f 'base/atoms/mm/EnvironmentalPointCharge.cpp'; then $(CYGPATH_W) 'base/atoms/mm/EnvironmentalPointCharge.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/mm/EnvironmentalPointCharge.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/EnvironmentalPointCharge.Tpo $(DEPDIR)/EnvironmentalPointCharge.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/atoms/mm/EnvironmentalPointCharge.cpp' object='EnvironmentalPointCharge.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EnvironmentalPointCharge.obj `if test -f 'base/atoms/mm/EnvironmentalPointCharge.cpp'; then $(CYGPATH_W) 'base/atoms/mm/EnvironmentalPointCharge.cpp'; else $(CYGPATH_W) '$(srcdir)/base/atoms/mm/EnvironmentalPointCharge.cpp'; fi`

AtomFactory.o: base/factories/AtomFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AtomFactory.o -MD -MP -MF $(DEPDIR)/AtomFactory.Tpo -c -o AtomFactory.o `test -f 'base/factories/AtomFactory.cpp' || echo '$(srcdir)/'`base/factories/AtomFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/AtomFactory.Tpo $(DEPDIR)/AtomFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/factories/AtomFactory.cpp' object='AtomFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AtomFactory.o `test -f 'base/factories/AtomFactory.cpp' || echo '$(srcdir)/'`base/factories/AtomFactory.cpp

AtomFactory.obj: base/factories/AtomFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AtomFactory.obj -MD -MP -MF $(DEPDIR)/AtomFactory.Tpo -c -o AtomFactory.obj `if test -f 'base/factories/AtomFactory.cpp'; then $(CYGPATH_W) 'base/factories/AtomFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/base/factories/AtomFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/AtomFactory.Tpo $(DEPDIR)/AtomFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/factories/AtomFactory.cpp' object='AtomFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AtomFactory.obj `if test -f 'base/factories/AtomFactory.cpp'; then $(CYGPATH_W) 'base/factories/AtomFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/base/factories/AtomFactory.cpp'; fi`

Molecule.o: base/Molecule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Molecule.o -MD -MP -MF $(DEPDIR)/Molecule.Tpo -c -o Molecule.o `test -f 'base/Molecule.cpp' || echo '$(srcdir)/'`base/Molecule.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Molecule.Tpo $(DEPDIR)/Molecule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Molecule.cpp' object='Molecule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Molecule.o `test -f 'base/Molecule.cpp' || echo '$(srcdir)/'`base/Molecule.cpp

Molecule.obj: base/Molecule.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Molecule.obj -MD -MP -MF $(DEPDIR)/Molecule.Tpo -c -o Molecule.obj `if test -f 'base/Molecule.cpp'; then $(CYGPATH_W) 'base/Molecule.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Molecule.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Molecule.Tpo $(DEPDIR)/Molecule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/Molecule.cpp' object='Molecule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Molecule.obj `if test -f 'base/Molecule.cpp'; then $(CYGPATH_W) 'base/Molecule.cpp'; else $(CYGPATH_W) '$(srcdir)/base/Molecule.cpp'; fi`

InputParser.o: base/InputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputParser.o -MD -MP -MF $(DEPDIR)/InputParser.Tpo -c -o InputParser.o `test -f 'base/InputParser.cpp' || echo '$(srcdir)/'`base/InputParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/InputParser.Tpo $(DEPDIR)/InputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/InputParser.cpp' object='InputParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputParser.o `test -f 'base/InputParser.cpp' || echo '$(srcdir)/'`base/InputParser.cpp

InputParser.obj: base/InputParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputParser.obj -MD -MP -MF $(DEPDIR)/InputParser.Tpo -c -o InputParser.obj `if test -f 'base/InputParser.cpp'; then $(CYGPATH_W) 'base/InputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/base/InputParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/InputParser.Tpo $(DEPDIR)/InputParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/InputParser.cpp' object='InputParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputParser.obj `if test -f 'base/InputParser.cpp'; then $(CYGPATH_W) 'base/InputParser.cpp'; else $(CYGPATH_W) '$(srcdir)/base/InputParser.cpp'; fi`

GTOExpansionSTO.o: base/GTOExpansionSTO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GTOExpansionSTO.o -MD -MP -MF $(DEPDIR)/GTOExpansionSTO.Tpo -c -o GTOExpansionSTO.o `test -f 'base/GTOExpansionSTO.cpp' || echo '$(srcdir)/'`base/GTOExpansionSTO.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GTOExpansionSTO.Tpo $(DEPDIR)/GTOExpansionSTO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/GTOExpansionSTO.cpp' object='GTOExpansionSTO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GTOExpansionSTO.o `test -f 'base/GTOExpansionSTO.cpp' || echo '$(srcdir)/'`base/GTOExpansionSTO.cpp

GTOExpansionSTO.obj: base/GTOExpansionSTO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GTOExpansionSTO.obj -MD -MP -MF $(DEPDIR)/GTOExpansionSTO.Tpo -c -o GTOExpansionSTO.obj `if test -f 'base/GTOExpansionSTO.cpp'; then $(CYGPATH_W) 'base/GTOExpansionSTO.cpp'; else $(CYGPATH_W) '$(srcdir)/base/GTOExpansionSTO.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GTOExpansionSTO.Tpo $(DEPDIR)/GTOExpansionSTO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/GTOExpansionSTO.cpp' object='GTOExpansionSTO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GTOExpansionSTO.obj `if test -f 'base/GTOExpansionSTO.cpp'; then $(CYGPATH_W) 'base/GTOExpansionSTO.cpp'; else $(CYGPATH_W) '$(srcdir)/base/GTOExpansionSTO.cpp'; fi`

MOLogger.o: base/loggers/MOLogger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MOLogger.o -MD -MP -MF $(DEPDIR)/MOLogger.Tpo -c -o MOLogger.o `test -f 'base/loggers/MOLogger.cpp' || echo '$(srcdir)/'`base/loggers/MOLogger.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MOLogger.Tpo $(DEPDIR)/MOLogger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/loggers/MOLogger.cpp' object='MOLogger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MOLogger.o `test -f 'base/loggers/MOLogger.cpp' || echo '$(srcdir)/'`base/loggers/MOLogger.cpp

MOLogger.obj: base/loggers/MOLogger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MOLogger.obj -MD -MP -MF $(DEPDIR)/MOLogger.Tpo -c -o MOLogger.obj `if test -f 'base/loggers/MOLogger.cpp'; then $(CYGPATH_W) 'base/loggers/MOLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/base/loggers/MOLogger.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MOLogger.Tpo $(DEPDIR)/MOLogger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/loggers/MOLogger.cpp' object='MOLogger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MOLogger.obj `if test -f 'base/loggers/MOLogger.cpp'; then $(CYGPATH_W) 'base/loggers/MOLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/base/loggers/MOLogger.cpp'; fi`

DensityLogger.o: base/loggers/DensityLogger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DensityLogger.o -MD -MP -MF $(DEPDIR)/DensityLogger.Tpo -c -o DensityLogger.o `test -f 'base/loggers/DensityLogger.cpp' || echo '$(srcdir)/'`base/loggers/DensityLogger.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/DensityLogger.Tpo $(DEPDIR)/DensityLogger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/loggers/DensityLogger.cpp' object='DensityLogger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DensityLogger.o `test -f 'base/loggers/DensityLogger.cpp' || echo '$(srcdir)/'`base/loggers/DensityLogger.cpp

DensityLogger.obj: base/loggers/DensityLogger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DensityLogger.obj -MD -MP -MF $(DEPDIR)/DensityLogger.Tpo -c -o DensityLogger.obj `if test -f 'base/loggers/DensityLogger.cpp'; then $(CYGPATH_W) 'base/loggers/DensityLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/base/loggers/DensityLogger.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/DensityLogger.Tpo $(DEPDIR)/DensityLogger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/loggers/DensityLogger.cpp' object='DensityLogger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DensityLogger.obj `if test -f 'base/loggers/DensityLogger.cpp'; then $(CYGPATH_W) 'base/loggers/DensityLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/base/loggers/DensityLogger.cpp'; fi`

HoleDensityLogger.o: base/loggers/HoleDensityLogger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HoleDensityLogger.o -MD -MP -MF $(DEPDIR)/HoleDensityLogger.Tpo -c -o HoleDensityLogger.o `test -f 'base/loggers/HoleDensityLogger.cpp' || echo '$(srcdir)/'`base/loggers/HoleDensityLogger.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/HoleDensityLogger.Tpo $(DEPDIR)/HoleDensityLogger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/loggers/HoleDensityLogger.cpp' object='HoleDensityLogger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HoleDensityLogger.o `test -f 'base/loggers/HoleDensityLogger.cpp' || echo '$(srcdir)/'`base/loggers/HoleDensityLogger.cpp

HoleDensityLogger.obj: base/loggers/HoleDensityLogger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HoleDensityLogger.obj -MD -MP -MF $(DEPDIR)/HoleDensityLogger.Tpo -c -o HoleDensityLogger.obj `if test -f 'base/loggers/HoleDensityLogger.cpp'; then $(CYGPATH_W) 'base/loggers/HoleDensityLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/base/loggers/HoleDensityLogger.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/HoleDensityLogger.Tpo $(DEPDIR)/HoleDensityLogger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/loggers/HoleDensityLogger.cpp' object='HoleDensityLogger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HoleDensityLogger.obj `if test -f 'base/loggers/HoleDensityLogger.cpp'; then $(CYGPATH_W) 'base/loggers/HoleDensityLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/base/loggers/HoleDensityLogger.cpp'; fi`

ParticleDensityLogger.o: base/loggers/ParticleDensityLogger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ParticleDensityLogger.o -MD -MP -MF $(DEPDIR)/ParticleDensityLogger.Tpo -c -o ParticleDensityLogger.o `test -f 'base/loggers/ParticleDensityLogger.cpp' || echo '$(srcdir)/'`base/loggers/ParticleDensityLogger.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ParticleDensityLogger.Tpo $(DEPDIR)/ParticleDensityLogger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/loggers/ParticleDensityLogger.cpp' object='ParticleDensityLogger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleDensityLogger.o `test -f 'base/loggers/ParticleDensityLogger.cpp' || echo '$(srcdir)/'`base/loggers/ParticleDensityLogger.cpp

ParticleDensityLogger.obj: base/loggers/ParticleDensityLogger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ParticleDensityLogger.obj -MD -MP -MF $(DEPDIR)/ParticleDensityLogger.Tpo -c -o ParticleDensityLogger.obj `if test -f 'base/loggers/ParticleDensityLogger.cpp'; then $(CYGPATH_W) 'base/loggers/ParticleDensityLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/base/loggers/ParticleDensityLogger.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ParticleDensityLogger.Tpo $(DEPDIR)/ParticleDensityLogger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/loggers/ParticleDensityLogger.cpp' object='ParticleDensityLogger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleDensityLogger.obj `if test -f 'base/loggers/ParticleDensityLogger.cpp'; then $(CYGPATH_W) 'base/loggers/ParticleDensityLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/base/loggers/ParticleDensityLogger.cpp'; fi`

Cndo2.o: cndo/Cndo2.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Cndo2.o -MD -MP -MF $(DEPDIR)/Cndo2.Tpo -c -o Cndo2.o `test -f 'cndo/Cndo2.cpp' || echo '$(srcdir)/'`cndo/Cndo2.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Cndo2.Tpo $(DEPDIR)/Cndo2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cndo/Cndo2.cpp' object='Cndo2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Cndo2.o `test -f 'cndo/Cndo2.cpp' || echo '$(srcdir)/'`cndo/Cndo2.cpp

Cndo2.obj: cndo/Cndo2.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Cndo2.obj -MD -MP -MF $(DEPDIR)/Cndo2.Tpo -c -o Cndo2.obj `if test -f 'cndo/Cndo2.cpp'; then $(CYGPATH_W) 'cndo/Cndo2.cpp'; else $(CYGPATH_W) '$(srcdir)/cndo/Cndo2.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Cndo2.Tpo $(DEPDIR)/Cndo2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cndo/Cndo2.cpp' object='Cndo2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Cndo2.obj `if test -f 'cndo/Cndo2.cpp'; then $(CYGPATH_W) 'cndo/Cndo2.cpp'; else $(CYGPATH_W) '$(srcdir)/cndo/Cndo2.cpp'; fi`

Indo.o: indo/Indo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Indo.o -MD -MP -MF $(DEPDIR)/Indo.Tpo -c -o Indo.o `test -f 'indo/Indo.cpp' || echo '$(srcdir)/'`indo/Indo.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Indo.Tpo $(DEPDIR)/Indo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='indo/Indo.cpp' object='Indo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Indo.o `test -f 'indo/Indo.cpp' || echo '$(srcdir)/'`indo/Indo.cpp

Indo.obj: indo/Indo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Indo.obj -MD -MP -MF $(DEPDIR)/Indo.Tpo -c -o Indo.obj `if test -f 'indo/Indo.cpp'; then $(CYGPATH_W) 'indo/Indo.cpp'; else $(CYGPATH_W) '$(srcdir)/indo/Indo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Indo.Tpo $(DEPDIR)/Indo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='indo/Indo.cpp' object='Indo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Indo.obj `if test -f 'indo/Indo.cpp'; then $(CYGPATH_W) 'indo/Indo.cpp'; else $(CYGPATH_W) '$(srcdir)/indo/Indo.cpp'; fi`

ZindoS.o: zindo/ZindoS.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZindoS.o -MD -MP -MF $(DEPDIR)/ZindoS.Tpo -c -o ZindoS.o `test -f 'zindo/ZindoS.cpp' || echo '$(srcdir)/'`zindo/ZindoS.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ZindoS.Tpo $(DEPDIR)/ZindoS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zindo/ZindoS.cpp' object='ZindoS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZindoS.o `test -f 'zindo/ZindoS.cpp' || echo '$(srcdir)/'`zindo/ZindoS.cpp

ZindoS.obj: zindo/ZindoS.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZindoS.obj -MD -MP -MF $(DEPDIR)/ZindoS.Tpo -c -o ZindoS.obj `if test -f 'zindo/ZindoS.cpp'; then $(CYGPATH_W) 'zindo/ZindoS.cpp'; else $(CYGPATH_W) '$(srcdir)/zindo/ZindoS.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ZindoS.Tpo $(DEPDIR)/ZindoS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zindo/ZindoS.cpp' object='ZindoS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZindoS.obj `if test -f 'zindo/ZindoS.cpp'; then $(CYGPATH_W) 'zindo/ZindoS.cpp'; else $(CYGPATH_W) '$(srcdir)/zindo/ZindoS.cpp'; fi`

Mndo.o: mndo/Mndo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Mndo.o -MD -MP -MF $(DEPDIR)/Mndo.Tpo -c -o Mndo.o `test -f 'mndo/Mndo.cpp' || echo '$(srcdir)/'`mndo/Mndo.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Mndo.Tpo $(DEPDIR)/Mndo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mndo/Mndo.cpp' object='Mndo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Mndo.o `test -f 'mndo/Mndo.cpp' || echo '$(srcdir)/'`mndo/Mndo.cpp

Mndo.obj: mndo/Mndo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Mndo.obj -MD -MP -MF $(DEPDIR)/Mndo.Tpo -c -o Mndo.obj `if test -f 'mndo/Mndo.cpp'; then $(CYGPATH_W) 'mndo/Mndo.cpp'; else $(CYGPATH_W) '$(srcdir)/mndo/Mndo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Mndo.Tpo $(DEPDIR)/Mndo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mndo/Mndo.cpp' object='Mndo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Mndo.obj `if test -f 'mndo/Mndo.cpp'; then $(CYGPATH_W) 'mndo/Mndo.cpp'; else $(CYGPATH_W) '$(srcdir)/mndo/Mndo.cpp'; fi`

Am1.o: am1/Am1.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Am1.o -MD -MP -MF $(DEPDIR)/Am1.Tpo -c -o Am1.o `test -f 'am1/Am1.cpp' || echo '$(srcdir)/'`am1/Am1.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Am1.Tpo $(DEPDIR)/Am1.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='am1/Am1.cpp' object='Am1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Am1.o `test -f 'am1/Am1.cpp' || echo '$(srcdir)/'`am1/Am1.cpp

Am1.obj: am1/Am1.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Am1.obj -MD -MP -MF $(DEPDIR)/Am1.Tpo -c -o Am1.obj `if test -f 'am1/Am1.cpp'; then $(CYGPATH_W) 'am1/Am1.cpp'; else $(CYGPATH_W) '$(srcdir)/am1/Am1.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Am1.Tpo $(DEPDIR)/Am1.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='am1/Am1.cpp' object='Am1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Am1.obj `if test -f 'am1/Am1.cpp'; then $(CYGPATH_W) 'am1/Am1.cpp'; else $(CYGPATH_W) '$(srcdir)/am1/Am1.cpp'; fi`

Am1D.o: am1/Am1D.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Am1D.o -MD -MP -MF $(DEPDIR)/Am1D.Tpo -c -o Am1D.o `test -f 'am1/Am1D.cpp' || echo '$(srcdir)/'`am1/Am1D.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Am1D.Tpo $(DEPDIR)/Am1D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='am1/Am1D.cpp' object='Am1D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Am1D.o `test -f 'am1/Am1D.cpp' || echo '$(srcdir)/'`am1/Am1D.cpp

Am1D.obj: am1/Am1D.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Am1D.obj -MD -MP -MF $(DEPDIR)/Am1D.Tpo -c -o Am1D.obj `if test -f 'am1/Am1D.cpp'; then $(CYGPATH_W) 'am1/Am1D.cpp'; else $(CYGPATH_W) '$(srcdir)/am1/Am1D.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Am1D.Tpo $(DEPDIR)/Am1D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='am1/Am1D.cpp' object='Am1D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Am1D.obj `if test -f 'am1/Am1D.cpp'; then $(CYGPATH_W) 'am1/Am1D.cpp'; else $(CYGPATH_W) '$(srcdir)/am1/Am1D.cpp'; fi`

Pm3.o: pm3/Pm3.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Pm3.o -MD -MP -MF $(DEPDIR)/Pm3.Tpo -c -o Pm3.o `test -f 'pm3/Pm3.cpp' || echo '$(srcdir)/'`pm3/Pm3.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Pm3.Tpo $(DEPDIR)/Pm3.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pm3/Pm3.cpp' object='Pm3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Pm3.o `test -f 'pm3/Pm3.cpp' || echo '$(srcdir)/'`pm3/Pm3.cpp

Pm3.obj: pm3/Pm3.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Pm3.obj -MD -MP -MF $(DEPDIR)/Pm3.Tpo -c -o Pm3.obj `if test -f 'pm3/Pm3.cpp'; then $(CYGPATH_W) 'pm3/Pm3.cpp'; else $(CYGPATH_W) '$(srcdir)/pm3/Pm3.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Pm3.Tpo $(DEPDIR)/Pm3.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pm3/Pm3.cpp' object='Pm3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Pm3.obj `if test -f 'pm3/Pm3.cpp'; then $(CYGPATH_W) 'pm3/Pm3.cpp'; else $(CYGPATH_W) '$(srcdir)/pm3/Pm3.cpp'; fi`

Pm3D.o: pm3/Pm3D.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Pm3D.o -MD -MP -MF $(DEPDIR)/Pm3D.Tpo -c -o Pm3D.o `test -f 'pm3/Pm3D.cpp' || echo '$(srcdir)/'`pm3/Pm3D.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Pm3D.Tpo $(DEPDIR)/Pm3D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pm3/Pm3D.cpp' object='Pm3D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Pm3D.o `test -f 'pm3/Pm3D.cpp' || echo '$(srcdir)/'`pm3/Pm3D.cpp

Pm3D.obj: pm3/Pm3D.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Pm3D.obj -MD -MP -MF $(DEPDIR)/Pm3D.Tpo -c -o Pm3D.obj `if test -f 'pm3/Pm3D.cpp'; then $(CYGPATH_W) 'pm3/Pm3D.cpp'; else $(CYGPATH_W) '$(srcdir)/pm3/Pm3D.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Pm3D.Tpo $(DEPDIR)/Pm3D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pm3/Pm3D.cpp' object='Pm3D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Pm3D.obj `if test -f 'pm3/Pm3D.cpp'; then $(CYGPATH_W) 'pm3/Pm3D.cpp'; else $(CYGPATH_W) '$(srcdir)/pm3/Pm3D.cpp'; fi`

Pm3Pddg.o: pm3/Pm3Pddg.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Pm3Pddg.o -MD -MP -MF $(DEPDIR)/Pm3Pddg.Tpo -c -o Pm3Pddg.o `test -f 'pm3/Pm3Pddg.cpp' || echo '$(srcdir)/'`pm3/Pm3Pddg.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Pm3Pddg.Tpo $(DEPDIR)/Pm3Pddg.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pm3/Pm3Pddg.cpp' object='Pm3Pddg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Pm3Pddg.o `test -f 'pm3/Pm3Pddg.cpp' || echo '$(srcdir)/'`pm3/Pm3Pddg.cpp

Pm3Pddg.obj: pm3/Pm3Pddg.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Pm3Pddg.obj -MD -MP -MF $(DEPDIR)/Pm3Pddg.Tpo -c -o Pm3Pddg.obj `if test -f 'pm3/Pm3Pddg.cpp'; then $(CYGPATH_W) 'pm3/Pm3Pddg.cpp'; else $(CYGPATH_W) '$(srcdir)/pm3/Pm3Pddg.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Pm3Pddg.Tpo $(DEPDIR)/Pm3Pddg.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pm3/Pm3Pddg.cpp' object='Pm3Pddg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Pm3Pddg.obj `if test -f 'pm3/Pm3Pddg.cpp'; then $(CYGPATH_W) 'pm3/Pm3Pddg.cpp'; else $(CYGPATH_W) '$(srcdir)/pm3/Pm3Pddg.cpp'; fi`

ElectronicStructureFactory.o: base/factories/ElectronicStructureFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ElectronicStructureFactory.o -MD -MP -MF $(DEPDIR)/ElectronicStructureFactory.Tpo -c -o ElectronicStructureFactory.o `test -f 'base/factories/ElectronicStructureFactory.cpp' || echo '$(srcdir)/'`base/factories/ElectronicStructureFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ElectronicStructureFactory.Tpo $(DEPDIR)/ElectronicStructureFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/factories/ElectronicStructureFactory.cpp' object='ElectronicStructureFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ElectronicStructureFactory.o `test -f 'base/factories/ElectronicStructureFactory.cpp' || echo '$(srcdir)/'`base/factories/ElectronicStructureFactory.cpp

ElectronicStructureFactory.obj: base/factories/ElectronicStructureFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ElectronicStructureFactory.obj -MD -MP -MF $(DEPDIR)/ElectronicStructureFactory.Tpo -c -o ElectronicStructureFactory.obj `if test -f 'base/factories/ElectronicStructureFactory.cpp'; then $(CYGPATH_W) 'base/factories/ElectronicStructureFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/base/factories/ElectronicStructureFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ElectronicStructureFactory.Tpo $(DEPDIR)/ElectronicStructureFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/factories/ElectronicStructureFactory.cpp' object='ElectronicStructureFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ElectronicStructureFactory.obj `if test -f 'base/factories/ElectronicStructureFactory.cpp'; then $(CYGPATH_W) 'base/factories/ElectronicStructureFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/base/factories/ElectronicStructureFactory.cpp'; fi`

MD.o: md/MD.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MD.o -MD -MP -MF $(DEPDIR)/MD.Tpo -c -o MD.o `test -f 'md/MD.cpp' || echo '$(srcdir)/'`md/MD.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MD.Tpo $(DEPDIR)/MD.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='md/MD.cpp' object='MD.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MD.o `test -f 'md/MD.cpp' || echo '$(srcdir)/'`md/MD.cpp

MD.obj: md/MD.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MD.obj -MD -MP -MF $(DEPDIR)/MD.Tpo -c -o MD.obj `if test -f 'md/MD.cpp'; then $(CYGPATH_W) 'md/MD.cpp'; else $(CYGPATH_W) '$(srcdir)/md/MD.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MD.Tpo $(DEPDIR)/MD.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='md/MD.cpp' object='MD.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MD.obj `if test -f 'md/MD.cpp'; then $(CYGPATH_W) 'md/MD.cpp'; else $(CYGPATH_W) '$(srcdir)/md/MD.cpp'; fi`

MC.o: mc/MC.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MC.o -MD -MP -MF $(DEPDIR)/MC.Tpo -c -o MC.o `test -f 'mc/MC.cpp' || echo '$(srcdir)/'`mc/MC.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MC.Tpo $(DEPDIR)/MC.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mc/MC.cpp' object='MC.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MC.o `test -f 'mc/MC.cpp' || echo '$(srcdir)/'`mc/MC.cpp

MC.obj: mc/MC.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MC.obj -MD -MP -MF $(DEPDIR)/MC.Tpo -c -o MC.obj `if test -f 'mc/MC.cpp'; then $(CYGPATH_W) 'mc/MC.cpp'; else $(CYGPATH_W) '$(srcdir)/mc/MC.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MC.Tpo $(DEPDIR)/MC.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mc/MC.cpp' object='MC.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MC.obj `if test -f 'mc/MC.cpp'; then $(CYGPATH_W) 'mc/MC.cpp'; else $(CYGPATH_W) '$(srcdir)/mc/MC.cpp'; fi`

RPMD.o: rpmd/RPMD.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RPMD.o -MD -MP -MF $(DEPDIR)/RPMD.Tpo -c -o RPMD.o `test -f 'rpmd/RPMD.cpp' || echo '$(srcdir)/'`rpmd/RPMD.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RPMD.Tpo $(DEPDIR)/RPMD.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rpmd/RPMD.cpp' object='RPMD.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RPMD.o `test -f 'rpmd/RPMD.cpp' || echo '$(srcdir)/'`rpmd/RPMD.cpp

RPMD.obj: rpmd/RPMD.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RPMD.obj -MD -MP -MF $(DEPDIR)/RPMD.Tpo -c -o RPMD.obj `if test -f 'rpmd/RPMD.cpp'; then $(CYGPATH_W) 'rpmd/RPMD.cpp'; else $(CYGPATH_W) '$(srcdir)/rpmd/RPMD.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RPMD.Tpo $(DEPDIR)/RPMD.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rpmd/RPMD.cpp' object='RPMD.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RPMD.obj `if test -f 'rpmd/RPMD.cpp'; then $(CYGPATH_W) 'rpmd/RPMD.cpp'; else $(CYGPATH_W) '$(srcdir)/rpmd/RPMD.cpp'; fi`

NASCO.o: nasco/NASCO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NASCO.o -MD -MP -MF $(DEPDIR)/NASCO.Tpo -c -o NASCO.o `test -f 'nasco/NASCO.cpp' || echo '$(srcdir)/'`nasco/NASCO.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/NASCO.Tpo $(DEPDIR)/NASCO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nasco/NASCO.cpp' object='NASCO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NASCO.o `test -f 'nasco/NASCO.cpp' || echo '$(srcdir)/'`nasco/NASCO.cpp

NASCO.obj: nasco/NASCO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NASCO.obj -MD -MP -MF $(DEPDIR)/NASCO.Tpo -c -o NASCO.obj `if test -f 'nasco/NASCO.cpp'; then $(CYGPATH_W) 'nasco/NASCO.cpp'; else $(CYGPATH_W) '$(srcdir)/nasco/NASCO.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/NASCO.Tpo $(DEPDIR)/NASCO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nasco/NASCO.cpp' object='NASCO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NASCO.obj `if test -f 'nasco/NASCO.cpp'; then $(CYGPATH_W) 'nasco/NASCO.cpp'; else $(CYGPATH_W) '$(srcdir)/nasco/NASCO.cpp'; fi`

Optimizer.o: optimization/Optimizer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Optimizer.o -MD -MP -MF $(DEPDIR)/Optimizer.Tpo -c -o Optimizer.o `test -f 'optimization/Optimizer.cpp' || echo '$(srcdir)/'`optimization/Optimizer.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Optimizer.Tpo $(DEPDIR)/Optimizer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='optimization/Optimizer.cpp' object='Optimizer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Optimizer.o `test -f 'optimization/Optimizer.cpp' || echo '$(srcdir)/'`optimization/Optimizer.cpp

Optimizer.obj: optimization/Optimizer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Optimizer.obj -MD -MP -MF $(DEPDIR)/Optimizer.Tpo -c -o Optimizer.obj `if test -f 'optimization/Optimizer.cpp'; then $(CYGPATH_W) 'optimization/Optimizer.cpp'; else $(CYGPATH_W) '$(srcdir)/optimization/Optimizer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Optimizer.Tpo $(DEPDIR)/Optimizer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='optimization/Optimizer.cpp' object='Optimizer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Optimizer.obj `if test -f 'optimization/Optimizer.cpp'; then $(CYGPATH_W) 'optimization/Optimizer.cpp'; else $(CYGPATH_W) '$(srcdir)/optimization/Optimizer.cpp'; fi`

ConjugateGradient.o: optimization/ConjugateGradient.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConjugateGradient.o -MD -MP -MF $(DEPDIR)/ConjugateGradient.Tpo -c -o ConjugateGradient.o `test -f 'optimization/ConjugateGradient.cpp' || echo '$(srcdir)/'`optimization/ConjugateGradient.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConjugateGradient.Tpo $(DEPDIR)/ConjugateGradient.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='optimization/ConjugateGradient.cpp' object='ConjugateGradient.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConjugateGradient.o `test -f 'optimization/ConjugateGradient.cpp' || echo '$(srcdir)/'`optimization/ConjugateGradient.cpp

ConjugateGradient.obj: optimization/ConjugateGradient.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConjugateGradient.obj -MD -MP -MF $(DEPDIR)/ConjugateGradient.Tpo -c -o ConjugateGradient.obj `if test -f 'optimization/ConjugateGradient.cpp'; then $(CYGPATH_W) 'optimization/ConjugateGradient.cpp'; else $(CYGPATH_W) '$(srcdir)/optimization/ConjugateGradient.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConjugateGradient.Tpo $(DEPDIR)/ConjugateGradient.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='optimization/ConjugateGradient.cpp' object='ConjugateGradient.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConjugateGradient.obj `if test -f 'optimization/ConjugateGradient.cpp'; then $(CYGPATH_W) 'optimization/ConjugateGradient.cpp'; else $(CYGPATH_W) '$(srcdir)/optimization/ConjugateGradient.cpp'; fi`

SteepestDescent.o: optimization/SteepestDescent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SteepestDescent.o -MD -MP -MF $(DEPDIR)/SteepestDescent.Tpo -c -o SteepestDescent.o `test -f 'optimization/SteepestDescent.cpp' || echo '$(srcdir)/'`optimization/SteepestDescent.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SteepestDescent.Tpo $(DEPDIR)/SteepestDescent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='optimization/SteepestDescent.cpp' object='SteepestDescent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SteepestDescent.o `test -f 'optimization/SteepestDescent.cpp' || echo '$(srcdir)/'`optimization/SteepestDescent.cpp

SteepestDescent.obj: optimization/SteepestDescent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SteepestDescent.obj -MD -MP -MF $(DEPDIR)/SteepestDescent.Tpo -c -o SteepestDescent.obj `if test -f 'optimization/SteepestDescent.cpp'; then $(CYGPATH_W) 'optimization/SteepestDescent.cpp'; else $(CYGPATH_W) '$(srcdir)/optimization/SteepestDescent.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SteepestDescent.Tpo $(DEPDIR)/SteepestDescent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='optimization/SteepestDescent.cpp' object='SteepestDescent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SteepestDescent.obj `if test -f 'optimization/SteepestDescent.cpp'; then $(CYGPATH_W) 'optimization/SteepestDescent.cpp'; else $(CYGPATH_W) '$(srcdir)/optimization/SteepestDescent.cpp'; fi`

BFGS.o: optimization/BFGS.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BFGS.o -MD -MP -MF $(DEPDIR)/BFGS.Tpo -c -o BFGS.o `test -f 'optimization/BFGS.cpp' || echo '$(srcdir)/'`optimization/BFGS.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/BFGS.Tpo $(DEPDIR)/BFGS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='optimization/BFGS.cpp' object='BFGS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BFGS.o `test -f 'optimization/BFGS.cpp' || echo '$(srcdir)/'`optimization/BFGS.cpp

BFGS.obj: optimization/BFGS.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BFGS.obj -MD -MP -MF $(DEPDIR)/BFGS.Tpo -c -o BFGS.obj `if test -f 'optimization/BFGS.cpp'; then $(CYGPATH_W) 'optimization/BFGS.cpp'; else $(CYGPATH_W) '$(srcdir)/optimization/BFGS.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/BFGS.Tpo $(DEPDIR)/BFGS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='optimization/BFGS.cpp' object='BFGS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BFGS.obj `if test -f 'optimization/BFGS.cpp'; then $(CYGPATH_W) 'optimization/BFGS.cpp'; else $(CYGPATH_W) '$(srcdir)/optimization/BFGS.cpp'; fi`

GEDIIS.o: optimization/GEDIIS.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GEDIIS.o -MD -MP -MF $(DEPDIR)/GEDIIS.Tpo -c -o GEDIIS.o `test -f 'optimization/GEDIIS.cpp' || echo '$(srcdir)/'`optimization/GEDIIS.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GEDIIS.Tpo $(DEPDIR)/GEDIIS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='optimization/GEDIIS.cpp' object='GEDIIS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GEDIIS.o `test -f 'optimization/GEDIIS.cpp' || echo '$(srcdir)/'`optimization/GEDIIS.cpp

GEDIIS.obj: optimization/GEDIIS.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GEDIIS.obj -MD -MP -MF $(DEPDIR)/GEDIIS.Tpo -c -o GEDIIS.obj `if test -f 'optimization/GEDIIS.cpp'; then $(CYGPATH_W) 'optimization/GEDIIS.cpp'; else $(CYGPATH_W) '$(srcdir)/optimization/GEDIIS.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GEDIIS.Tpo $(DEPDIR)/GEDIIS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='optimization/GEDIIS.cpp' object='GEDIIS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GEDIIS.obj `if test -f 'optimization/GEDIIS.cpp'; then $(CYGPATH_W) 'optimization/GEDIIS.cpp'; else $(CYGPATH_W) '$(srcdir)/optimization/GEDIIS.cpp'; fi`

OptimizerFactory.o: base/factories/OptimizerFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OptimizerFactory.o -MD -MP -MF $(DEPDIR)/OptimizerFactory.Tpo -c -o OptimizerFactory.o `test -f 'base/factories/OptimizerFactory.cpp' || echo '$(srcdir)/'`base/factories/OptimizerFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/OptimizerFactory.Tpo $(DEPDIR)/OptimizerFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/factories/OptimizerFactory.cpp' object='OptimizerFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OptimizerFactory.o `test -f 'base/factories/OptimizerFactory.cpp' || echo '$(srcdir)/'`base/factories/OptimizerFactory.cpp

OptimizerFactory.obj: base/factories/OptimizerFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OptimizerFactory.obj -MD -MP -MF $(DEPDIR)/OptimizerFactory.Tpo -c -o OptimizerFactory.obj `if test -f 'base/factories/OptimizerFactory.cpp'; then $(CYGPATH_W) 'base/factories/OptimizerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/base/factories/OptimizerFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/OptimizerFactory.Tpo $(DEPDIR)/OptimizerFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/factories/OptimizerFactory.cpp' object='OptimizerFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OptimizerFactory.obj `if test -f 'base/factories/OptimizerFactory.cpp'; then $(CYGPATH_W) 'base/factories/OptimizerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/base/factories/OptimizerFactory.cpp'; fi`

MolDS.o: base/MolDS.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MolDS.o -MD -MP -MF $(DEPDIR)/MolDS.Tpo -c -o MolDS.o `test -f 'base/MolDS.cpp' || echo '$(srcdir)/'`base/MolDS.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MolDS.Tpo $(DEPDIR)/MolDS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/MolDS.cpp' object='MolDS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MolDS.o `test -f 'base/MolDS.cpp' || echo '$(srcdir)/'`base/MolDS.cpp

MolDS.obj: base/MolDS.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MolDS.obj -MD -MP -MF $(DEPDIR)/MolDS.Tpo -c -o MolDS.obj `if test -f 'base/MolDS.cpp'; then $(CYGPATH_W) 'base/MolDS.cpp'; else $(CYGPATH_W) '$(srcdir)/base/MolDS.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/MolDS.Tpo $(DEPDIR)/MolDS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/MolDS.cpp' object='MolDS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MolDS.obj `if test -f 'base/MolDS.cpp'; then $(CYGPATH_W) 'base/MolDS.cpp'; else $(CYGPATH_W) '$(srcdir)/base/MolDS.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod u+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic ctags dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-lzma dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
